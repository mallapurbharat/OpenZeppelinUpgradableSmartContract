{
  "fileName": "MyContract.sol",
  "contractName": "MyContract",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.8.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\ncontract MyContract is Initializable {\n    address owner;\n    bool bInitialized;\n\n    function initialize() public /*initializer*/ {\n\n        //require(bInitialized == false, \"You can only initialize once\");\n        owner = msg.sender;\n    }\n}",
  "sourcePath": "contracts/MyContract.sol",
  "sourceMap": "128:243:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "128:243:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;214:155;;;:::i;:::-;;;352:10;344:5;;:18;;;;;;;;;;;;;;;;;;214:155::o",
  "abi": [
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/MyContract.sol",
    "exportedSymbols": {
      "MyContract": [
        384
      ]
    },
    "id": 385,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 367,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:4"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 368,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 271,
        "src": "66:60:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 369,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 270,
              "src": "151:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$270",
                "typeString": "contract Initializable"
              }
            },
            "id": 370,
            "nodeType": "InheritanceSpecifier",
            "src": "151:13:4"
          }
        ],
        "contractDependencies": [
          270
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384,
          270
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 372,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 384,
            "src": "171:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 371,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 374,
            "mutability": "mutable",
            "name": "bInitialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 384,
            "src": "190:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 373,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "190:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "259:110:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 377,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "344:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "352:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "352:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "344:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "344:18:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:4"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:4"
            },
            "scope": 384,
            "src": "214:155:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 385,
        "src": "128:243:4"
      }
    ],
    "src": "32:339:4"
  },
  "bytecode": "0x6080604052348015600f57600080fd5b5060ae8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b60336035565b005b33603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fea26469706673582212201ee92c76c860dfde9e277e6520cbcdeff086f15025fb387dae35aa33dcd3865764736f6c634300060c0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b60336035565b005b33603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fea26469706673582212201ee92c76c860dfde9e277e6520cbcdeff086f15025fb387dae35aa33dcd3865764736f6c634300060c0033",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  },
  "networks": {}
}
